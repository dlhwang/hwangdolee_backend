plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dollee.bank'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	/* spring boot */
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation("com.querydsl:querydsl-jpa:5.0.0:jakarta")
	annotationProcessor("com.querydsl:querydsl-apt:5.0.0:jakarta") // QClass 자동 생성
	annotationProcessor("jakarta.persistence:jakarta.persistence-api") // JPA 애노테이션 지원
	annotationProcessor("jakarta.annotation:jakarta.annotation-api") // 애노테이션 처리 지원

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.1'


	/* H2 Database*/
	implementation 'com.h2database:h2'

	/* lombok*/
	compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	testImplementation 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

	/* ULID */
	implementation 'de.huxhorn.sulky:de.huxhorn.sulky.ulid:8.3.0'

	/* Test */
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}


def generatedDir = 'src/main/generated'
sourceSets {
	main.java.srcDirs += [generatedDir]
}

compileJava.doFirst {
	delete file("${generatedDir}/com")
	ant.echo(message: "compileJava delete files successully.")
}

tasks.compileJava {
	options.generatedSourceOutputDirectory = file(generatedDir)
}

tasks.clean {
	delete file(generatedDir)
}